package presentacion;

import com.manager.datos.TLibro;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmOrd_Y_FIFO extends javax.swing.JFrame {

    ArrayList<TLibro> list;

    DefaultTableModel modelDesordenado;
    DefaultTableModel modelOrdenado;

    /**
     * Constructor
     */
    public frmOrd_Y_FIFO() {
        initComponents();
        MyInitComponents();
    }

    /**
     * Inicializar componentes propios de la clase
     *
     */
    private void MyInitComponents() {

        list = new ArrayList<>();

        modelDesordenado = (DefaultTableModel) (tblDesordenado.getModel());
        modelOrdenado = (DefaultTableModel) (tblDesordenado.getModel());

        final javax.swing.JFrame me = this;
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                me.setVisible(false);
                me.dispose();
                System.exit(0);
            }
        });

        VisualizarLista();
    }

    /**
     * Borrar la tabla
     *
     * @param table
     */
    private void CleanTbl() {
        modelDesordenado.setRowCount(0);
        modelOrdenado.setRowCount(0);
    }

    private void Salir() {
        this.setVisible(false);
        this.dispose();
        System.exit(0);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMensaje = new javax.swing.JTextField();
        btnInsercion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDesordenado = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrdenado = new javax.swing.JTable();
        btnInsertar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Biblioteca");

        txtMensaje.setEditable(false);
        txtMensaje.setEnabled(false);

        btnInsercion.setText("L.- mas y menos");
        btnInsercion.setEnabled(false);

        tblDesordenado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Autor", "Titulo", "Nro. Copias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDesordenado);
        if (tblDesordenado.getColumnModel().getColumnCount() > 0) {
            tblDesordenado.getColumnModel().getColumn(0).setResizable(false);
            tblDesordenado.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblDesordenado.getColumnModel().getColumn(1).setResizable(false);
            tblDesordenado.getColumnModel().getColumn(2).setResizable(false);
        }

        tblOrdenado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Autor", "Titulo", "Nro. Copias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblOrdenado);
        if (tblOrdenado.getColumnModel().getColumnCount() > 0) {
            tblOrdenado.getColumnModel().getColumn(0).setResizable(false);
            tblOrdenado.getColumnModel().getColumn(0).setPreferredWidth(30);
            tblOrdenado.getColumnModel().getColumn(1).setResizable(false);
            tblOrdenado.getColumnModel().getColumn(2).setResizable(false);
            tblOrdenado.getColumnModel().getColumn(3).setResizable(false);
        }

        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Quick Sort");
        btnOrdenar.setEnabled(false);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMensaje)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInsercion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInsertar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOrdenar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnInsercion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalir))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed

        int id;
        while (true) {
            String strId = JOptionPane.showInputDialog(null, "ID libro", "Estructura de Datos POO",
                    JOptionPane.QUESTION_MESSAGE).trim().toUpperCase();

            try {
                id = Integer.parseInt(strId);
            } catch (NumberFormatException numberFormatException) {
                JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
                id = -1;
            }

            if (id > 0) {
                break;
            }
        }

        String strAutor;
        while (true) {
            strAutor = JOptionPane.showInputDialog(null, "Autor", "Estructura de Datos POO",
                    JOptionPane.QUESTION_MESSAGE).trim().toUpperCase();

            if (strAutor.length() > 0) {
                break;
            } else {
                JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            }
        }

        String strTitulo;
        while (true) {
            strTitulo = JOptionPane.showInputDialog(null, "Titulo", "Estructura de Datos POO",
                    JOptionPane.QUESTION_MESSAGE).trim().toUpperCase();

            if (strTitulo.length() > 0) {
                break;
            } else {
                JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            }
        }

        int nroCopias;
        while (true) {
            System.out.println("\nNro. copias= ? ");
            String strNroCopias;
            strNroCopias = JOptionPane.showInputDialog(null, "Nro. copias", "Estructura de Datos POO",
                    JOptionPane.QUESTION_MESSAGE).trim().toUpperCase();

            try {
                nroCopias = Integer.parseInt(strNroCopias);
            } catch (NumberFormatException numberFormatException) {
                JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
                nroCopias = -1;
            }

            if (nroCopias > 0) {
                break;
            }
        }

        TLibro libro = new TLibro(id, strAutor, strTitulo, nroCopias);

        // Verificar si el Libro ya existe
        if (list.contains(libro)) {
            System.out.println("*** EL LIBRO YA FUE INGRESADO ***");
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
        } else {
            list.add(libro);
            VisualizarLista();
        }

    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if (list.size() <= 0) {
            JOptionPane.showMessageDialog(this, "***  LISTA VACIA   ***");
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            return;
        }

        int id;
        while (true) {
            String strId = JOptionPane.showInputDialog(null, "ID libro", "Estructura de Datos POO",
                    JOptionPane.QUESTION_MESSAGE).trim().toUpperCase();

            try {
                id = Integer.parseInt(strId);
            } catch (NumberFormatException numberFormatException) {
                JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
                id = -1;
            }

            if (id > 0) {
                break;
            }
        }

        TLibro libro = new TLibro(id, "", "", 0);

        // Busca el Libro
        int idx = list.indexOf(libro);
        if (idx >= 0) {
            list.remove(idx);
            JOptionPane.showMessageDialog(this, "*** LIBRO BORRADO ***");
            VisualizarLista();
        } else {
            JOptionPane.showMessageDialog(this, "*** LIBRO NO ENCONTRADO ***");
            JOptionPane.showMessageDialog(this, "   *** VALOR INVALIDO ***");
        }

    }//GEN-LAST:event_btnBorrarActionPerformed

    /**
     * Ver el contenido de la lista en la Tabla
     *
     */
    public void VisualizarLista() {

        CleanTbl();

        for (int i = 0; i < list.size(); i++) {
            Object[] obj = new Object[4];
            obj[0] = list.get(i).getId();
            obj[1] = list.get(i).getAutor();
            obj[2] = list.get(i).getTitulo();
            obj[3] = list.get(i).getNroCopias();

            modelDesordenado.addRow(obj);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmOrd_Y_FIFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmOrd_Y_FIFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmOrd_Y_FIFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmOrd_Y_FIFO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmOrd_Y_FIFO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnInsercion;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDesordenado;
    private javax.swing.JTable tblOrdenado;
    private javax.swing.JTextField txtMensaje;
    // End of variables declaration//GEN-END:variables
}
