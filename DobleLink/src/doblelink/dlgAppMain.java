package doblelink;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author manager
 */
public class dlgAppMain extends javax.swing.JDialog {

    // Aqui se guarda la ventana contenedora, el Padre/Madre
    private java.awt.Frame owner;

    // Aqui se matiene la referencia al objeto 
    private DLista myListTDA;

// **********************************************************************************************
    /**
     *
     */
    /**
     * Creates new form dlgAppMain
     *
     * @param parent
     */
    public dlgAppMain(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        this.owner = parent;
        myListTDA = null;
        MyInitComponents();
    }

    /**
     * Inicializar componentes propios de la clase
     *
     */
    private void MyInitComponents() {

        final javax.swing.JDialog me = this;
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                Salir();
            }
        });

        myListTDA = new DLista();
        limpiarEntradas();
        mostrarDatos();

        txtItem.requestFocus();
    }

    /**
     * Acciones para cerrar la aplicacion
     *
     */
    private void Salir() {
        this.setVisible(false);
        this.dispose();

        if (owner != null) {
            owner.setVisible(false);
            owner.dispose();
        }

        System.exit(0);
    }

    private void mostrarDatos() {
        if (myListTDA == null) {
            txtTam.setText("");
            return;
        }

        DefaultListModel model = new DefaultListModel();
        lstList.setModel(model);

        String[] aux = myListTDA.getStrDatosSig();

        if (aux != null) {
            for (int i = 0; i < aux.length; i++) {
                model.addElement(aux[i]);
            }
        }

        txtTam.setText(String.valueOf(myListTDA.tamano()));
        txtItem.requestFocus();
    }

    private void limpiarEntradas() {
        txtTam.setText("");
        txtItem.setText("");
        txtNum.setText("");
        txtDen.setText("");

        txtItem.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTam = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtItem = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNum = new javax.swing.JTextField();
        txtDen = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnDelIni = new javax.swing.JButton();
        btnInsertarIni = new javax.swing.JButton();
        btnInsertarFin = new javax.swing.JButton();
        btnAleatorio = new javax.swing.JButton();
        btnRecorrerSig = new javax.swing.JButton();
        btnRecorrerAnt = new javax.swing.JButton();
        btnBusqSec = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnDelFin = new javax.swing.JButton();
        btnDelFraccion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Lista Enlazada Doble");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Tamaño");
        jLabel1.setMinimumSize(new java.awt.Dimension(80, 30));
        jLabel1.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        txtTam.setEditable(false);
        txtTam.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtTam.setMinimumSize(new java.awt.Dimension(100, 30));
        txtTam.setPreferredSize(new java.awt.Dimension(120, 30));
        txtTam.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(txtTam, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Item");
        jLabel2.setMinimumSize(new java.awt.Dimension(80, 30));
        jLabel2.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        txtItem.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtItem.setMinimumSize(new java.awt.Dimension(100, 30));
        txtItem.setPreferredSize(new java.awt.Dimension(120, 30));
        txtItem.setRequestFocusEnabled(false);
        txtItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtItemMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(txtItem, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Númerador");
        jLabel3.setMinimumSize(new java.awt.Dimension(80, 30));
        jLabel3.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Denominador");
        jLabel4.setMinimumSize(new java.awt.Dimension(80, 30));
        jLabel4.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        txtNum.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtNum.setMinimumSize(new java.awt.Dimension(100, 30));
        txtNum.setPreferredSize(new java.awt.Dimension(120, 30));
        txtNum.setRequestFocusEnabled(false);
        txtNum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNumMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(txtNum, gridBagConstraints);

        txtDen.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtDen.setMinimumSize(new java.awt.Dimension(100, 30));
        txtDen.setPreferredSize(new java.awt.Dimension(120, 30));
        txtDen.setRequestFocusEnabled(false);
        txtDen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDenMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(txtDen, gridBagConstraints);

        getContentPane().add(jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnDelIni.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnDelIni.setText("Del. Inicio");
        btnDelIni.setToolTipText("Elimina una Fracción al inicio de la lista");
        btnDelIni.setMinimumSize(new java.awt.Dimension(160, 35));
        btnDelIni.setPreferredSize(new java.awt.Dimension(160, 35));
        btnDelIni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelIniActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnDelIni, gridBagConstraints);

        btnInsertarIni.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnInsertarIni.setText("Ins. Inic.");
        btnInsertarIni.setToolTipText("Inserta una Fraccion, al inicio de la lista\n");
        btnInsertarIni.setMinimumSize(new java.awt.Dimension(160, 35));
        btnInsertarIni.setPreferredSize(new java.awt.Dimension(160, 35));
        btnInsertarIni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarIniActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnInsertarIni, gridBagConstraints);

        btnInsertarFin.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnInsertarFin.setText("Ins. Final");
        btnInsertarFin.setToolTipText("Inserta una Fracción, al final de una lista");
        btnInsertarFin.setMinimumSize(new java.awt.Dimension(160, 35));
        btnInsertarFin.setPreferredSize(new java.awt.Dimension(160, 35));
        btnInsertarFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarFinActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnInsertarFin, gridBagConstraints);

        btnAleatorio.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnAleatorio.setText("Aleatorio");
        btnAleatorio.setToolTipText("Toma del campo Item, la cantidad de elementos aleatorios tendra la lista enlazada, y la genera");
        btnAleatorio.setMinimumSize(new java.awt.Dimension(160, 35));
        btnAleatorio.setPreferredSize(new java.awt.Dimension(160, 35));
        btnAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAleatorioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnAleatorio, gridBagConstraints);

        btnRecorrerSig.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnRecorrerSig.setText("Recorrer SIg.");
        btnRecorrerSig.setToolTipText("Muestra la lista recorrida hacia \"adelante\"");
        btnRecorrerSig.setMinimumSize(new java.awt.Dimension(160, 35));
        btnRecorrerSig.setPreferredSize(new java.awt.Dimension(160, 35));
        btnRecorrerSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecorrerSigActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnRecorrerSig, gridBagConstraints);

        btnRecorrerAnt.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnRecorrerAnt.setText("Recorrer Ant.");
        btnRecorrerAnt.setToolTipText("Muestra la lista recorrida hacia \"atras\"");
        btnRecorrerAnt.setMinimumSize(new java.awt.Dimension(160, 35));
        btnRecorrerAnt.setPreferredSize(new java.awt.Dimension(160, 35));
        btnRecorrerAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecorrerAntActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnRecorrerAnt, gridBagConstraints);

        btnBusqSec.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnBusqSec.setText("Buscar");
        btnBusqSec.setToolTipText("Realiza un busqueda secuencial, hacia \"adelante\" sobre la lista ");
        btnBusqSec.setMinimumSize(new java.awt.Dimension(160, 35));
        btnBusqSec.setPreferredSize(new java.awt.Dimension(160, 35));
        btnBusqSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusqSecActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnBusqSec, gridBagConstraints);

        btnSalir.setBackground(new java.awt.Color(255, 102, 102));
        btnSalir.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setMinimumSize(new java.awt.Dimension(160, 35));
        btnSalir.setPreferredSize(new java.awt.Dimension(160, 35));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnSalir, gridBagConstraints);

        btnDelFin.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnDelFin.setText("Del. Final");
        btnDelFin.setToolTipText("elimina una Fraccion al Final\n");
        btnDelFin.setMinimumSize(new java.awt.Dimension(160, 35));
        btnDelFin.setPreferredSize(new java.awt.Dimension(160, 35));
        btnDelFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelFinActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnDelFin, gridBagConstraints);

        btnDelFraccion.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnDelFraccion.setText("Del. Fracción");
        btnDelFraccion.setToolTipText("elimina una Fraccion buscada en cualquier parte de la lista\n");
        btnDelFraccion.setMinimumSize(new java.awt.Dimension(160, 35));
        btnDelFraccion.setPreferredSize(new java.awt.Dimension(160, 35));
        btnDelFraccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelFraccionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 20);
        jPanel2.add(btnDelFraccion, gridBagConstraints);

        getContentPane().add(jPanel2);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(100, 131));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(100, 131));

        lstList.setEnabled(false);
        jScrollPane2.setViewportView(lstList);

        getContentPane().add(jScrollPane2);

        setSize(new java.awt.Dimension(610, 530));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDelIniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelIniActionPerformed
        // Lista no ha sido creada
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero el Array");
            txtItem.requestFocus();
            return;
        }

        // Lista Vacia
        if (myListTDA.tamano() <= 0) {
            JOptionPane.showMessageDialog(null, "Lista Vacia");
            txtItem.requestFocus();
            return;
        }

        myListTDA.eliminarInicio();
        limpiarEntradas();
        mostrarDatosSig();
        txtItem.requestFocus();
    }//GEN-LAST:event_btnDelIniActionPerformed

    private void btnAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAleatorioActionPerformed
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero la Lista");
            txtItem.requestFocus();
            return;
        }

        int item;
        String strItem = txtItem.getText().trim().toUpperCase();

        try {
            item = Integer.parseInt(strItem);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtItem.requestFocus();
            return;
        }

        if ((item <= 0) || (item > 10_000)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 10_000)");
            txtItem.requestFocus();
            return;
        }

        myListTDA.fillRandom(item);
        limpiarEntradas();
        mostrarDatos();
        txtItem.requestFocus();
    }//GEN-LAST:event_btnAleatorioActionPerformed

    private void btnRecorrerSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecorrerSigActionPerformed

        // Lista no ha sido creada
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero el Array");
            txtItem.requestFocus();
            return;
        }

        // Lista Vacia
        if (myListTDA.tamano() <= 0) {
            JOptionPane.showMessageDialog(null, "Lista Vacia");
            txtItem.requestFocus();
            return;
        }

        limpiarEntradas();
        mostrarDatosSig();
        txtItem.requestFocus();

    }//GEN-LAST:event_btnRecorrerSigActionPerformed

    private void btnRecorrerAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecorrerAntActionPerformed
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero el Array");
            txtItem.requestFocus();
            return;
        }

        // Lista Vacia
        if (myListTDA.tamano() <= 0) {
            JOptionPane.showMessageDialog(null, "Lista Vacia");
            txtItem.requestFocus();
            return;
        }

        limpiarEntradas();
        mostrarDatosAnt();
        txtItem.requestFocus();

    }//GEN-LAST:event_btnRecorrerAntActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        Salir();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnInsertarFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarFinActionPerformed

        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero la Lista");
            txtItem.requestFocus();
            return;
        }

        txtItem.setText("");

        int num;
        String strNum = txtNum.getText().trim().toUpperCase();

        try {
            num = Integer.parseInt(strNum);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtNum.requestFocus();
            return;
        }

        if ((num <= 0) || (num > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 10_000)");
            txtNum.requestFocus();
            return;
        }

        int den;
        String strDen = txtDen.getText().trim().toUpperCase();

        try {
            den = Integer.parseInt(strDen);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtDen.requestFocus();
            return;
        }

        if ((den <= 0) || (den > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 100)");
            txtDen.requestFocus();
            return;
        }

        myListTDA.insertarFinal(new Fraccion(num, den));
        limpiarEntradas();
        mostrarDatos();
        txtItem.requestFocus();
    }//GEN-LAST:event_btnInsertarFinActionPerformed

    private void btnInsertarIniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarIniActionPerformed
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero la Lista");
            txtItem.requestFocus();
            return;
        }

        txtItem.setText("");

        int num;
        String strNum = txtNum.getText().trim().toUpperCase();

        try {
            num = Integer.parseInt(strNum);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtNum.requestFocus();
            return;
        }

        if ((num <= 0) || (num > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 10_000)");
            txtNum.requestFocus();
            return;
        }

        int den;
        String strDen = txtDen.getText().trim().toUpperCase();

        try {
            den = Integer.parseInt(strDen);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtDen.requestFocus();
            return;
        }

        if ((den <= 0) || (den > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 100)");
            txtDen.requestFocus();
            return;
        }

        myListTDA.insertarInicio(new Fraccion(num, den));
        limpiarEntradas();
        mostrarDatos();
        txtItem.requestFocus();
    }//GEN-LAST:event_btnInsertarIniActionPerformed

    private void btnBusqSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusqSecActionPerformed

        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero la Lista");
            txtItem.requestFocus();
            return;
        }

        txtItem.setText("");

        int num;
        String strNum = txtNum.getText().trim().toUpperCase();

        try {
            num = Integer.parseInt(strNum);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtNum.requestFocus();
            return;
        }

        if ((num <= 0) || (num > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 10_000)");
            txtNum.requestFocus();
            return;
        }

        int den;
        String strDen = txtDen.getText().trim().toUpperCase();

        try {
            den = Integer.parseInt(strDen);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtDen.requestFocus();
            return;
        }

        if ((den <= 0) || (den > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 100)");
            txtDen.requestFocus();
            return;
        }

        if (myListTDA.buscar(new Fraccion(num, den))) {
            JOptionPane.showMessageDialog(this, "Elemento SI encontrado");
        } else {
            JOptionPane.showMessageDialog(this, "Elemento NO encontrado");
        }
        limpiarEntradas();
        mostrarDatos();
        txtItem.requestFocus();
    }//GEN-LAST:event_btnBusqSecActionPerformed

    private void txtItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtItemMouseClicked
        txtItem.requestFocus();
    }//GEN-LAST:event_txtItemMouseClicked

    private void txtNumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNumMouseClicked
        txtNum.requestFocus();
    }//GEN-LAST:event_txtNumMouseClicked

    private void txtDenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDenMouseClicked
        txtDen.requestFocus();
    }//GEN-LAST:event_txtDenMouseClicked

    private void btnDelFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelFinActionPerformed
        // Lista no ha sido creada
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero el Array");
            txtItem.requestFocus();
            return;
        }

        // Lista Vacia
        if (myListTDA.tamano() <= 0) {
            JOptionPane.showMessageDialog(null, "Lista Vacia");
            txtItem.requestFocus();
            return;
        }

        myListTDA.eliminarFinal();
        limpiarEntradas();
        mostrarDatosSig();
        txtItem.requestFocus();

    }//GEN-LAST:event_btnDelFinActionPerformed

    private void btnDelFraccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelFraccionActionPerformed
        if (myListTDA == null) {
            JOptionPane.showMessageDialog(null, "Debe crear primero la Lista");
            txtItem.requestFocus();
            return;
        }

        txtItem.setText("");

        int num;
        String strNum = txtNum.getText().trim().toUpperCase();

        try {
            num = Integer.parseInt(strNum);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtNum.requestFocus();
            return;
        }

        if ((num < 0) || (num > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 10_000)");
            txtNum.requestFocus();
            return;
        }

        int den;
        String strDen = txtDen.getText().trim().toUpperCase();

        try {
            den = Integer.parseInt(strDen);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO ***");
            txtDen.requestFocus();
            return;
        }

        if ((den <= 0) || (den > 100)) {
            JOptionPane.showMessageDialog(this, "*** VALOR INVALIDO *** 0 < elemento <= 100)");
            txtDen.requestFocus();
            return;
        }

        if (myListTDA.eliminar(new Fraccion(num, den))) {
            JOptionPane.showMessageDialog(this, "Elemento SI encontrado, ELIMINADO");
        } else {
            JOptionPane.showMessageDialog(this, "Elemento NO encontrado");
        }
        limpiarEntradas();
        mostrarDatos();
        txtItem.requestFocus();
    }//GEN-LAST:event_btnDelFraccionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                (new dlgAppMain(new javax.swing.JFrame())).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAleatorio;
    private javax.swing.JButton btnBusqSec;
    private javax.swing.JButton btnDelFin;
    private javax.swing.JButton btnDelFraccion;
    private javax.swing.JButton btnDelIni;
    private javax.swing.JButton btnInsertarFin;
    private javax.swing.JButton btnInsertarIni;
    private javax.swing.JButton btnRecorrerAnt;
    private javax.swing.JButton btnRecorrerSig;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstList;
    private javax.swing.JTextField txtDen;
    private javax.swing.JTextField txtItem;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtTam;
    // End of variables declaration//GEN-END:variables

    private void mostrarDatosSig() {
        if (myListTDA == null) {
            txtTam.setText("");
            return;
        }

        DefaultListModel model = new DefaultListModel();
        lstList.setModel(model);

        String[] aux = myListTDA.getStrDatosSig();

        if (aux != null) {
            for (int i = 0; i < aux.length; i++) {
                model.addElement(aux[i]);
            }
        }

        txtTam.setText(String.valueOf(myListTDA.tamano()));
        txtItem.requestFocus();
    }

    private void mostrarDatosAnt() {
        if (myListTDA == null) {
            txtTam.setText("");
            return;
        }

        DefaultListModel model = new DefaultListModel();
        lstList.setModel(model);

        String[] aux = myListTDA.getStrDatosAnt();

        if (aux != null) {
            for (int i = 0; i < aux.length; i++) {
                model.addElement(aux[i]);
            }
        }

        txtTam.setText(String.valueOf(myListTDA.tamano()));
        txtItem.requestFocus();
    }
}
