package com.manager.listacircularsimple;

import java.text.DecimalFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author manager
 */
public class dlgSImpleCircular extends javax.swing.JDialog {

    private Nodo head;
    private Nodo nodoActual;
    private int num;

    private final DefaultTableModel modelo;


    // Clase contenedora
    public class Nodo {

        String codigo;
        String nombre;
        String apellidos;
        String sexo;
        float sueldo;
        Nodo enlaceSig; // tal cual, enlace al nodo siguiente


        public Nodo(String cod, String nom, String ape, String sex, float suel) {
            codigo = cod;
            nombre = nom;
            apellidos = ape;
            sexo = sex;
            sueldo = suel;
            enlaceSig = this;
        }
    }


    /**
     * Creates new form dlgRegUser
     *
     * @param parent
     */
    public dlgSImpleCircular(java.awt.Frame parent) {
        super(parent, true);
        initComponents();

        head = null;
        num = 0;

        modelo = (DefaultTableModel) tblDatos.getModel();

    }


    /**
     *
     * @param head
     * @param cod
     * @param nom
     * @param ape
     * @param sex
     * @param suel
     * @return
     */
    public Nodo InsertarInicio(Nodo head, String cod, String nom, String ape, String sex, float suel) {
        Nodo nuevo = new Nodo(cod, nom, ape, sex, suel);
        if (head != null) {
            nuevo.enlaceSig = head.enlaceSig;
            head.enlaceSig = nuevo;
        } else {
            head = InsertarFinal(head, cod, nom, ape, sex, suel);
        }
        nodoActual = nuevo;
        return head;
    }


    /**
     *
     * @param head
     * @param cod
     * @param nom
     * @param ape
     * @param sex
     * @param suel
     * @return
     */
    public Nodo InsertarFinal(Nodo head, String cod, String nom, String ape, String sex, float suel) {
        Nodo nuevo = new Nodo(cod, nom, ape, sex, suel);

        if (head != null) {
            nuevo.enlaceSig = head.enlaceSig;
            head.enlaceSig = nuevo;
        }

        head = nuevo;
        nodoActual = nuevo;
        return head;
    }


    /**
     *
     */
    void LimpiarEntradas() {
        txtCodigo.setText("");
        txtNombre.setText("");
        txtSueldo.setText("");
        txtApellidos.setText("");
        cbxSexo.setSelectedIndex(-1);
        txtCodigo.requestFocusInWindow();
    }


    /**
     *
     */
    void VerDatos() {
        String cod, nom, ape, se, su;
        float s;

        vaciarTabla();

        if (head != null) {
            DecimalFormat df2 = new DecimalFormat("####.00");
            num = 0;
            Nodo p = head.enlaceSig;
            do {
                cod = p.codigo;
                nom = p.nombre;
                ape = p.apellidos;
                se = p.sexo;
                su = df2.format(p.sueldo);
                num++;
                Object[] fila = {num, cod, nom, ape, se, su};
                modelo.addRow(fila);
                p = p.enlaceSig;
            } while (p != head.enlaceSig);
        }
    }


    void Resumen() {
        DecimalFormat df2 = new DecimalFormat("####.00");
        String nom = "";
        String acum = "";
        float suma = 0;
        float mayor = -9999;
        float s;
        Nodo p;

        if (head != null) {
            p = head.enlaceSig;
            do {
                s = p.sueldo;
                suma = suma + s;
                if (s > mayor) {
                    mayor = s;
                    nom = p.nombre + " " + p.apellidos;
                }
                p = p.enlaceSig;
            } while (p != head.enlaceSig);

            txtSuelMayor.setText(nom);
            txtMonto.setText(String.valueOf(df2.format(mayor)));
        }
    }


    void vaciarTabla() {
        int filas = tblDatos.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pnlDatos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtSueldo = new javax.swing.JTextField();
        cbxSexo = new javax.swing.JComboBox<>();
        pnlComandos = new javax.swing.JPanel();
        btnGuardarIni = new javax.swing.JButton();
        btnAdeAtr = new javax.swing.JButton();
        mnuAtrAde = new javax.swing.JButton();
        btnRestaurar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnGuardarFin = new javax.swing.JButton();
        pnlTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20));
        pnlResumen = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtSuelMayor = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        pnlTitulo.setLayout(new javax.swing.BoxLayout(pnlTitulo, javax.swing.BoxLayout.PAGE_AXIS));
        getContentPane().add(pnlTitulo);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REGISTRO DE EMPLEADOS");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setMaximumSize(new java.awt.Dimension(800, 40));
        jLabel1.setMinimumSize(new java.awt.Dimension(800, 40));
        jLabel1.setPreferredSize(new java.awt.Dimension(800, 40));
        getContentPane().add(jLabel1);

        jPanel1.setMaximumSize(new java.awt.Dimension(800, 65534));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 400));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        pnlDatos.setMaximumSize(new java.awt.Dimension(400, 2147483647));
        pnlDatos.setMinimumSize(new java.awt.Dimension(400, 30));
        pnlDatos.setPreferredSize(new java.awt.Dimension(400, 0));
        pnlDatos.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("CODIGO");
        jLabel2.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel2.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("NOMBRE");
        jLabel3.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel3.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("SUELDO");
        jLabel4.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel4.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("APELLIDOS");
        jLabel5.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel5.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("SEXO");
        jLabel6.setMaximumSize(new java.awt.Dimension(100, 20));
        jLabel6.setMinimumSize(new java.awt.Dimension(100, 20));
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(jLabel6, gridBagConstraints);

        txtCodigo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtCodigo.setMaximumSize(new java.awt.Dimension(250, 30));
        txtCodigo.setMinimumSize(new java.awt.Dimension(250, 30));
        txtCodigo.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(txtCodigo, gridBagConstraints);

        txtNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtNombre.setMaximumSize(new java.awt.Dimension(250, 30));
        txtNombre.setMinimumSize(new java.awt.Dimension(250, 30));
        txtNombre.setPreferredSize(new java.awt.Dimension(250, 30));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(txtNombre, gridBagConstraints);

        txtApellidos.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtApellidos.setMaximumSize(new java.awt.Dimension(250, 30));
        txtApellidos.setMinimumSize(new java.awt.Dimension(250, 30));
        txtApellidos.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(txtApellidos, gridBagConstraints);

        txtSueldo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtSueldo.setMaximumSize(new java.awt.Dimension(250, 30));
        txtSueldo.setMinimumSize(new java.awt.Dimension(250, 30));
        txtSueldo.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(txtSueldo, gridBagConstraints);

        cbxSexo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FEMENINO", "MASCULINO" }));
        cbxSexo.setSelectedIndex(-1);
        cbxSexo.setMaximumSize(new java.awt.Dimension(250, 30));
        cbxSexo.setMinimumSize(new java.awt.Dimension(250, 30));
        cbxSexo.setPreferredSize(new java.awt.Dimension(250, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlDatos.add(cbxSexo, gridBagConstraints);

        jPanel2.add(pnlDatos);

        pnlComandos.setLayout(new java.awt.GridBagLayout());

        btnGuardarIni.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGuardarIni.setText("Guardar Ini.");
        btnGuardarIni.setMaximumSize(new java.awt.Dimension(150, 30));
        btnGuardarIni.setMinimumSize(new java.awt.Dimension(150, 30));
        btnGuardarIni.setPreferredSize(new java.awt.Dimension(150, 30));
        btnGuardarIni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarIniActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnGuardarIni, gridBagConstraints);

        btnAdeAtr.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAdeAtr.setText("Adelante - Atrás");
        btnAdeAtr.setEnabled(false);
        btnAdeAtr.setMaximumSize(new java.awt.Dimension(150, 30));
        btnAdeAtr.setMinimumSize(new java.awt.Dimension(150, 30));
        btnAdeAtr.setPreferredSize(new java.awt.Dimension(150, 30));
        btnAdeAtr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdeAtrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnAdeAtr, gridBagConstraints);

        mnuAtrAde.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        mnuAtrAde.setText("Atrás - Adelante");
        mnuAtrAde.setMaximumSize(new java.awt.Dimension(150, 30));
        mnuAtrAde.setMinimumSize(new java.awt.Dimension(150, 30));
        mnuAtrAde.setPreferredSize(new java.awt.Dimension(150, 30));
        mnuAtrAde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAtrAdeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(mnuAtrAde, gridBagConstraints);

        btnRestaurar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnRestaurar.setText("Restaurar");
        btnRestaurar.setEnabled(false);
        btnRestaurar.setMaximumSize(new java.awt.Dimension(150, 30));
        btnRestaurar.setMinimumSize(new java.awt.Dimension(150, 30));
        btnRestaurar.setPreferredSize(new java.awt.Dimension(150, 30));
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnRestaurar, gridBagConstraints);

        btnConsultar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnConsultar.setText("Buscar");
        btnConsultar.setMaximumSize(new java.awt.Dimension(150, 30));
        btnConsultar.setMinimumSize(new java.awt.Dimension(150, 30));
        btnConsultar.setPreferredSize(new java.awt.Dimension(150, 30));
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnConsultar, gridBagConstraints);

        btnActualizar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.setToolTipText("De los campos al nodo actual");
        btnActualizar.setMaximumSize(new java.awt.Dimension(150, 30));
        btnActualizar.setMinimumSize(new java.awt.Dimension(150, 30));
        btnActualizar.setPreferredSize(new java.awt.Dimension(150, 30));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnActualizar, gridBagConstraints);

        btnEliminar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setMaximumSize(new java.awt.Dimension(150, 30));
        btnEliminar.setMinimumSize(new java.awt.Dimension(150, 30));
        btnEliminar.setPreferredSize(new java.awt.Dimension(150, 30));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnEliminar, gridBagConstraints);

        btnSalir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setMaximumSize(new java.awt.Dimension(150, 30));
        btnSalir.setMinimumSize(new java.awt.Dimension(150, 30));
        btnSalir.setPreferredSize(new java.awt.Dimension(150, 30));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnSalir, gridBagConstraints);

        btnGuardarFin.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGuardarFin.setText("Guardar Fin.");
        btnGuardarFin.setMaximumSize(new java.awt.Dimension(150, 30));
        btnGuardarFin.setMinimumSize(new java.awt.Dimension(150, 30));
        btnGuardarFin.setPreferredSize(new java.awt.Dimension(150, 30));
        btnGuardarFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarFinActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        pnlComandos.add(btnGuardarFin, gridBagConstraints);

        jPanel2.add(pnlComandos);

        jPanel1.add(jPanel2);

        pnlTabla.setLayout(new javax.swing.BoxLayout(pnlTabla, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setMaximumSize(new java.awt.Dimension(32767, 150));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(453, 150));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "N\"", "Codigo", "Nombre", "Apellidos", "Sexo", "Sueldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDatos);

        pnlTabla.add(jScrollPane1);

        jPanel1.add(pnlTabla);

        getContentPane().add(jPanel1);
        getContentPane().add(filler1);

        pnlResumen.setBackground(new java.awt.Color(0, 51, 255));
        pnlResumen.setMaximumSize(new java.awt.Dimension(800, 75));
        pnlResumen.setMinimumSize(new java.awt.Dimension(800, 75));
        pnlResumen.setPreferredSize(new java.awt.Dimension(800, 75));
        pnlResumen.setLayout(new javax.swing.BoxLayout(pnlResumen, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel7.setText("Sueldo Mayor");
        jLabel7.setAlignmentX(0.5F);
        jLabel7.setPreferredSize(new java.awt.Dimension(200, 22));
        jPanel3.add(jLabel7);

        txtSuelMayor.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtSuelMayor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel3.add(txtSuelMayor);

        pnlResumen.add(jPanel3);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel8.setText("Monto");
        jLabel8.setAlignmentX(0.5F);
        jPanel4.add(jLabel8);

        txtMonto.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtMonto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel4.add(txtMonto);

        pnlResumen.add(jPanel4);

        getContentPane().add(pnlResumen);

        setSize(new java.awt.Dimension(810, 630));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarIniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarIniActionPerformed
        String cod = txtCodigo.getText().trim().toUpperCase();
        if (cod.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Codigo");
            txtCodigo.requestFocusInWindow();
            return;
        }

        String ape = txtApellidos.getText().trim().toUpperCase();
        if (ape.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Apellido");
            txtApellidos.requestFocusInWindow();
            return;
        }

        String nom = txtNombre.getText().trim().toUpperCase();
        if (nom.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Nombre");
            txtNombre.requestFocusInWindow();
            return;
        }

        String sex = cbxSexo.getSelectedItem().toString();
        if (cbxSexo.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Indique un Sexo");
            cbxSexo.requestFocusInWindow();
            return;
        }

        String strSuel = txtSueldo.getText().trim();

        float suel;

        try {
            suel = Float.parseFloat(strSuel);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "Sueldo invalido");
            txtSueldo.requestFocusInWindow();
            return;
        }

        head = InsertarInicio(head, cod, nom, ape, sex, suel);
        LimpiarEntradas();
        VerDatos();
        Resumen();
    }//GEN-LAST:event_btnGuardarIniActionPerformed


    public void IrNodoSig() {

        if (head == null || nodoActual == null) {
            return;
        }

        nodoActual = nodoActual.enlaceSig;
    }


    public void IrNodoAnt() {

        if (head == null || nodoActual == null) {
            return;
        }

        // nodoActual = nodoActual.enlaceAnt;
    }


    public void VerNodoActual() {
        if (nodoActual != null) {
            txtCodigo.setText(nodoActual.codigo);
            txtNombre.setText(nodoActual.nombre);
            txtApellidos.setText(nodoActual.apellidos);
            txtSueldo.setText(String.valueOf(nodoActual.sueldo));
            cbxSexo.setSelectedItem(nodoActual.sexo);
        } else {

        }
    }

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String strCodigo = txtCodigo.getText().trim().toUpperCase();
        if (strCodigo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Codigo");
            txtCodigo.requestFocusInWindow();
            return;
        }

        Nodo pFound = Buscar(head, strCodigo);
        if (pFound != null) {
            nodoActual = pFound;
            VerNodoActual();
            VerDatos();
        } else {
            JOptionPane.showMessageDialog(this, "El codigo: no esta en la lista");
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void mnuAtrAdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAtrAdeActionPerformed
        IrNodoSig();
        VerNodoActual();
    }//GEN-LAST:event_mnuAtrAdeActionPerformed

    private void btnAdeAtrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdeAtrActionPerformed
        IrNodoAnt();
        VerNodoActual();
    }//GEN-LAST:event_btnAdeAtrActionPerformed

    private void btnGuardarFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarFinActionPerformed
        String cod = txtCodigo.getText().trim().toUpperCase();
        if (cod.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Codigo");
            txtCodigo.requestFocusInWindow();
            return;
        }

        String ape = txtApellidos.getText().trim().toUpperCase();
        if (ape.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Apellido");
            txtApellidos.requestFocusInWindow();
            return;
        }

        String nom = txtNombre.getText().trim().toUpperCase();
        if (nom.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Nombre");
            txtNombre.requestFocusInWindow();
            return;
        }

        String sex = cbxSexo.getSelectedItem().toString();
        if (cbxSexo.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Indique un Sexo");
            cbxSexo.requestFocusInWindow();
            return;
        }

        String strSuel = txtSueldo.getText().trim();

        float suel;

        try {
            suel = Float.parseFloat(strSuel);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "Sueldo invalido");
            txtSueldo.requestFocusInWindow();
            return;
        }

        head = InsertarFinal(head, cod, nom, ape, sex, suel);
        LimpiarEntradas();
        VerDatos();
        Resumen();
    }//GEN-LAST:event_btnGuardarFinActionPerformed


    /**
     * Toma los datos del campo, y los coloca de nuevo en el nodo
     *
     * @param evt
     */
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed

        String cod = txtCodigo.getText().trim().toUpperCase();
        if (cod.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Codigo");
            txtCodigo.requestFocusInWindow();
            return;
        }

        String ape = txtApellidos.getText().trim().toUpperCase();
        if (ape.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Apellido");
            txtApellidos.requestFocusInWindow();
            return;
        }

        String nom = txtNombre.getText().trim().toUpperCase();
        if (nom.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Nombre");
            txtNombre.requestFocusInWindow();
            return;
        }

        String sex = cbxSexo.getSelectedItem().toString();
        if (cbxSexo.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Indique un Sexo");
            cbxSexo.requestFocusInWindow();
            return;
        }

        String strSuel = txtSueldo.getText().trim();

        float suel;
        try {
            suel = Float.parseFloat(strSuel);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "Sueldo invalido");
            txtSueldo.requestFocusInWindow();
            return;
        }

        nodoActual.codigo = cod;
        nodoActual.nombre = nom;
        nodoActual.apellidos = ape;
        nodoActual.sexo = sex;
        nodoActual.sueldo = suel;

        LimpiarEntradas();
        VerNodoActual();
        VerDatos();
        Resumen();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Eliminar();
        LimpiarEntradas();
        VerNodoActual();
        VerDatos();

        if (head == null) {
            JOptionPane.showMessageDialog(this, "LA LISTA ESTA VACIA");
            Resumen();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
        VerNodoActual();
    }//GEN-LAST:event_btnRestaurarActionPerformed


    void Eliminar() {

        if (head == null) {
            return;
        }

        String strCodigo = txtCodigo.getText().trim().toUpperCase();
        if (strCodigo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Indique un Codigo");
            txtCodigo.requestFocusInWindow();
            return;
        }

        Nodo nodoOut = null;
        Nodo p = head;

        if (p.enlaceSig == head) {
            if (p.enlaceSig.codigo.equalsIgnoreCase(strCodigo)) {
                nodoOut = p.enlaceSig;
            }
        } else {
            while (p.enlaceSig != head) {
                if (p.enlaceSig.codigo.equalsIgnoreCase(strCodigo)) {
                    nodoOut = p.enlaceSig;
                    break;
                }

                p = p.enlaceSig;
            }
        }

        // Encontrado el nodo
        if (nodoOut != null) {

            if (head == head.enlaceSig) {
                head = null;
                nodoActual = null;
            } else {
                if (nodoOut == head) {
                    head = nodoOut.enlaceSig;
                }

                p.enlaceSig = nodoOut.enlaceSig;
                nodoActual = p;
            }
        }

        VerDatos();
    }


    /**
     * @param args the command line arguments
     */
    Nodo Buscar(Nodo ic, String strCodigo) {

        Nodo p = ic;

        if (p.enlaceSig == ic) {
            if (p.enlaceSig.codigo.equalsIgnoreCase(strCodigo)) {
                return p.enlaceSig;
            }
        } else {
            while (p.enlaceSig != ic) {
                if (p.enlaceSig.codigo.equalsIgnoreCase(strCodigo)) {
                    return p.enlaceSig;
                }

                p = p.enlaceSig;
            }
        }

        return null;
    }


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dlgSImpleCircular.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                dlgSImpleCircular dialog = new dlgSImpleCircular(new JFrame());
                dialog.setVisible(true);
            }
        });

        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAdeAtr;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardarFin;
    private javax.swing.JButton btnGuardarIni;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cbxSexo;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mnuAtrAde;
    private javax.swing.JPanel pnlComandos;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlResumen;
    private javax.swing.JPanel pnlTabla;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSuelMayor;
    private javax.swing.JTextField txtSueldo;
    // End of variables declaration//GEN-END:variables
}
