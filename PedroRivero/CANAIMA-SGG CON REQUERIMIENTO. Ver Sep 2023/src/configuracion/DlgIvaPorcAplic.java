/*
 * Todos los derechos reservados por CAPIP Sistemas C.A., Venezuela
 * RIF J-407111787
 * capipsistemas@gmail.com, baba.orere@gmail.com
 * @2016, 2017, 2018
 */
package configuracion;

import capipsistema.CapipPropiedades;
import capipsistema.UserTrack;
import connection.ConnCapip;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import modelos.IvaAplicModel;
import modelos.PptoModel;
import utils.DecimalCellRenderer;
import utils.Format;
import utils.IntegerCellRenderer;
import utils.MasterDetailState;
import utils.PnlImagenFondo;

/**
 *
 * @author Capip Sistemas C.A.
 */
public class DlgIvaPorcAplic extends javax.swing.JDialog {

    private static final int COL_COD = 0;
    private static final int COL_PARTIDA = 1;
    private static final int COL_PORC = 2;
    private static final int COL_REG = 3;
    private static final int COL_REG_PPTO = 4;

    private MasterDetailState preState;
    private MasterDetailState state;

    /**
     * Creates new form DlgIvaPorcAplic
     *
     * @param parent
     */
    public DlgIvaPorcAplic(java.awt.Frame parent) {
        super(parent, true);
        initComponents();

        setOwnBehavior();
        setCompBehavior();
        setStartConditions();
    }

    /**
     * Rev 04/10/2016
     */
    private void setOwnBehavior() {
        try {
            UserTrack.trackUser(getClass().getName(), "INIT", getTitle());
        } catch (final Exception inex) {
            JOptionPane.showMessageDialog(null, inex);
        }

        setTitle(CapipPropiedades.CAPIP_SISTEMAS + " - " + getTitle() + " - " + CapipPropiedades.CAPIP_CLIENTE_RAZONSOCIAL);

        // Establecer la acciÃ³n al cerrar ventana
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                actReturn();
            }
        });

        // Para salir con la tecla ESC
        getRootPane().getInputMap(javax.swing.JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0), "Cancel");

        getRootPane().getActionMap().put("Cancel", new javax.swing.AbstractAction() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                actReturn();
            }
        });
    }

    /**
     * Rev 04/10/2016
     */
    private void setCompBehavior() {

        // Para actualizar automaticamente los campos de detalles, al seleccionar una fila de la tabla
        // al estilo master/detail
        tblMaster.getSelectionModel().addListSelectionListener((ListSelectionEvent inlse) -> {
            if (inlse.getValueIsAdjusting()) {
                return;
            }

            if (tblMaster.getSelectedRow() >= 0) {
                stateEditOld();
            }
        });

        tblMaster.setDefaultRenderer(Integer.class, new IntegerCellRenderer());
        tblMaster.setDefaultRenderer(Long.class, new IntegerCellRenderer());
        tblMaster.setDefaultRenderer(Double.class, new DecimalCellRenderer());
    }

    /**
     * Rev 02/10/2016
     */
    private void setStartConditions() {
        preState = MasterDetailState.None;
        state = MasterDetailState.None;

        cargarComboPartida();

        stateNormal();
    }

    /**
     * Para Reubicar la ventana al ser visualizada Rev 25/09/2016
     *
     * @param inb
     */
    @Override
    public void setVisible(boolean inb) {
        // Para mostrar la ventana en el tope de la pantalla
        if (inb) {
            setLocation((Toolkit.getDefaultToolkit().getScreenSize().width - getWidth()) / 2, 10);
        }

        super.setVisible(inb);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlImagenFondo = new PnlImagenFondo();
        pnlComponentes = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtValorPorc = textfield_decimal.DecimalTextField.getTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbxPartida = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMaster = new javax.swing.JTable();
        pnlComandos = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btnReturn = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Porcentaje de IVA aplicado");

        pnlImagenFondo.setLayout(new javax.swing.BoxLayout(pnlImagenFondo, javax.swing.BoxLayout.PAGE_AXIS));

        pnlComponentes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        pnlComponentes.setMaximumSize(new java.awt.Dimension(1000, 150));
        pnlComponentes.setMinimumSize(new java.awt.Dimension(1000, 150));
        pnlComponentes.setOpaque(false);
        pnlComponentes.setPreferredSize(new java.awt.Dimension(1000, 200));
        pnlComponentes.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Valor Porcentual  %");
        jLabel7.setAlignmentX(0.5F);
        jLabel7.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel7.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel7.setName(""); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(jLabel7, gridBagConstraints);

        btnSave.setBackground(java.awt.SystemColor.inactiveCaption);
        btnSave.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        btnSave.setText("Guardar");
        btnSave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSave.setEnabled(false);
        btnSave.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnSaveFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnSaveFocusLost(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(btnSave, gridBagConstraints);

        btnNew.setBackground(java.awt.SystemColor.inactiveCaption);
        btnNew.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        btnNew.setText("Nuevo");
        btnNew.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNew.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnNewFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnNewFocusLost(evt);
            }
        });
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 61;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(btnNew, gridBagConstraints);

        btnCancel.setBackground(java.awt.SystemColor.inactiveCaption);
        btnCancel.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        btnCancel.setText("Cancelar");
        btnCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnCancel.setEnabled(false);
        btnCancel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnCancelFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnCancelFocusLost(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(btnCancel, gridBagConstraints);

        txtValorPorc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtValorPorc.setToolTipText("Indique el valor en porcentaje del IVA");
        txtValorPorc.setEnabled(false);
        txtValorPorc.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        txtValorPorc.setMaximumSize(new java.awt.Dimension(150, 30));
        txtValorPorc.setMinimumSize(new java.awt.Dimension(150, 30));
        txtValorPorc.setPreferredSize(new java.awt.Dimension(150, 30));
        txtValorPorc.setSelectionColor(new java.awt.Color(175, 204, 125));
        txtValorPorc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorPorcActionPerformed(evt);
            }
        });
        txtValorPorc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValorPorcKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(txtValorPorc, gridBagConstraints);

        btnEliminar.setBackground(java.awt.SystemColor.inactiveCaption);
        btnEliminar.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnEliminar.setEnabled(false);
        btnEliminar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnEliminarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnEliminarFocusLost(evt);
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(btnEliminar, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Partida Presupuestaria");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(jLabel1, gridBagConstraints);

        cbxPartida.setBackground(java.awt.SystemColor.inactiveCaption);
        cbxPartida.setFont(new java.awt.Font("Arial", 2, 16)); // NOI18N
        cbxPartida.setToolTipText("Seleccione la Partida presupuestaria asociada al IVA");
        cbxPartida.setMinimumSize(new java.awt.Dimension(61, 30));
        cbxPartida.setPreferredSize(new java.awt.Dimension(61, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlComponentes.add(cbxPartida, gridBagConstraints);

        pnlImagenFondo.add(pnlComponentes);

        tblMaster.setFont(new java.awt.Font("Arial", 3, 15)); // NOI18N
        tblMaster.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Partida", "Desc. Partida", "Valor Porc. %", "reg_iva", "reg_part"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMaster.setSelectionBackground(new java.awt.Color(175, 204, 125));
        jScrollPane1.setViewportView(tblMaster);
        if (tblMaster.getColumnModel().getColumnCount() > 0) {
            tblMaster.getColumnModel().getColumn(0).setMinWidth(75);
            tblMaster.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblMaster.getColumnModel().getColumn(0).setMaxWidth(200);
            tblMaster.getColumnModel().getColumn(2).setMinWidth(75);
            tblMaster.getColumnModel().getColumn(2).setPreferredWidth(125);
            tblMaster.getColumnModel().getColumn(2).setMaxWidth(200);
            tblMaster.getColumnModel().getColumn(3).setMinWidth(0);
            tblMaster.getColumnModel().getColumn(3).setPreferredWidth(0);
            tblMaster.getColumnModel().getColumn(3).setMaxWidth(0);
            tblMaster.getColumnModel().getColumn(4).setMinWidth(0);
            tblMaster.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblMaster.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        pnlImagenFondo.add(jScrollPane1);

        pnlComandos.setMaximumSize(new java.awt.Dimension(1000, 60));
        pnlComandos.setMinimumSize(new java.awt.Dimension(1000, 60));
        pnlComandos.setOpaque(false);
        pnlComandos.setPreferredSize(new java.awt.Dimension(1000, 60));
        pnlComandos.setLayout(new javax.swing.BoxLayout(pnlComandos, javax.swing.BoxLayout.LINE_AXIS));
        pnlComandos.add(filler1);

        btnReturn.setBackground(java.awt.SystemColor.inactiveCaption);
        btnReturn.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        btnReturn.setText("RETORNAR");
        btnReturn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnReturn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReturn.setMaximumSize(new java.awt.Dimension(170, 40));
        btnReturn.setMinimumSize(new java.awt.Dimension(170, 40));
        btnReturn.setPreferredSize(new java.awt.Dimension(170, 40));
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });
        pnlComandos.add(btnReturn);
        pnlComandos.add(filler2);

        pnlImagenFondo.add(pnlComandos);

        getContentPane().add(pnlImagenFondo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        switch (state) {
            case EditNew:
                if (actSaveNew()) {
                    stateNormal();
                }
                break;
            case EditOld:
                actSaveOld();
                break;
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     *
     * @param evt
     */
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        switch (state) {
            case Normal:
            case EditOld:
                stateEditNew();
                break;
        }
    }//GEN-LAST:event_btnNewActionPerformed

    /**
     *
     * @param evt
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        switch (state) {
            case EditNew:
                stateNormal();
                break;
            case EditOld:
                actCancelSaveOld();
                break;
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     *
     * @param evt
     */
    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        switch (state) {
            case Normal:
            case EditOld:
                actReturn();
                break;
        }
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     *
     * @param evt
     */
    private void txtValorPorcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorPorcKeyTyped
        if (txtValorPorc.getText().length() >= 5) {
            evt.consume();
        }
    }//GEN-LAST:event_txtValorPorcKeyTyped

    private void txtValorPorcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorPorcActionPerformed
        java.awt.EventQueue.invokeLater(btnSave::requestFocusInWindow);
    }//GEN-LAST:event_txtValorPorcActionPerformed

    private void btnSaveFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnSaveFocusGained
        getRootPane().setDefaultButton(btnSave);
    }//GEN-LAST:event_btnSaveFocusGained

    private void btnSaveFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnSaveFocusLost
        getRootPane().setDefaultButton(null);
    }//GEN-LAST:event_btnSaveFocusLost

    private void btnNewFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnNewFocusGained
        getRootPane().setDefaultButton(btnNew);
    }//GEN-LAST:event_btnNewFocusGained

    private void btnNewFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnNewFocusLost
        getRootPane().setDefaultButton(null);
    }//GEN-LAST:event_btnNewFocusLost

    private void btnCancelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnCancelFocusGained
        getRootPane().setDefaultButton(btnCancel);
    }//GEN-LAST:event_btnCancelFocusGained

    private void btnCancelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnCancelFocusLost
        getRootPane().setDefaultButton(null);
    }//GEN-LAST:event_btnCancelFocusLost

    private void btnEliminarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnEliminarFocusGained
        getRootPane().setDefaultButton(btnEliminar);
    }//GEN-LAST:event_btnEliminarFocusGained

    private void btnEliminarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnEliminarFocusLost
        getRootPane().setDefaultButton(null);
    }//GEN-LAST:event_btnEliminarFocusLost

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * Rev 03/10/2016
     */
    private void stateNormal() {
        preState = state;
        state = MasterDetailState.Normal;

        // Condiciones iniciales
        initNormal();

        // Acciones
        actUpdateTbl();
        tblMaster.clearSelection();
        java.awt.EventQueue.invokeLater(tblMaster::requestFocusInWindow);
    }

    /**
     * Rev 03/10/2016
     */
    private void initNormal() {
        if (preState == state) {
            return;
        }

        actClearComp();

        cbxPartida.setEnabled(false);
        txtValorPorc.setEnabled(false);

        btnNew.setEnabled(true);
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);
        btnReturn.setEnabled(true);

        tblMaster.setEnabled(true);
    }

    /**
     * Rev 03/10/2016
     */
    private void stateEditNew() {
        preState = state;
        state = MasterDetailState.EditNew;

        // Condiciones iniciales
        initEditNew();

        // Acciones
        tblMaster.clearSelection();
        java.awt.EventQueue.invokeLater(cbxPartida::requestFocusInWindow);
    }

    /**
     * Rev 03/10/2016
     */
    private void initEditNew() {
        if (preState == state) {
            return;
        }

        actClearComp();

        cbxPartida.setEnabled(true);
        txtValorPorc.setEnabled(true);

        btnNew.setEnabled(false);
        btnSave.setEnabled(true);
        btnCancel.setEnabled(true);
        btnReturn.setEnabled(false);

        tblMaster.setEnabled(false);
    }

    /**
     * Rev 03/10/2016
     */
    private void stateEditOld() {
        preState = state;
        state = MasterDetailState.EditOld;

        // Condiciones iniciales
        initEditOld();

        // Acciones
        final int selRow = tblMaster.getSelectedRow();

        if (selRow >= 0) {
            final String codigo = (String) tblMaster.getValueAt(selRow, COL_COD);
            final String partida = (String) tblMaster.getValueAt(selRow, COL_PARTIDA);

            cbxPartida.setSelectedItem(codigo + "\t " + partida);
            txtValorPorc.setText(Format.toStr((Double) tblMaster.getValueAt(selRow, COL_PORC)));
            txtValorPorc.setValue(BigDecimal.valueOf((Double) tblMaster.getValueAt(selRow, COL_PORC)));
        } else {
            actClearComp();
        }

    }

    /**
     * Rev 03/10/2016
     */
    private void initEditOld() {
//        if (preState == state) {
//            return;
//        }

        final boolean enabled = tblMaster.getSelectedRow() >= 0;

        cbxPartida.setEnabled(enabled);
        txtValorPorc.setEnabled(enabled);

        btnNew.setEnabled(true);
        btnSave.setEnabled(enabled);
        btnCancel.setEnabled(enabled);
        btnReturn.setEnabled(true);

        tblMaster.setEnabled(true);
    }

    /**
     * Rev 03/10/2016
     */
    private boolean actSaveNew() {

        final Map<String, Object> param = new HashMap<>(101);
        if (actValidSaveNew(param)) {
            return actSaveNew(param);
        }
        return false;
    }

    /**
     * Rev 03/10/2016
     */
    private boolean actSaveOld() {

        final Map<String, Object> param = new HashMap<>(101);
        if (actValidSaveOld(param)) {
            return actSaveOld(param);
        }

        return false;
    }

    /**
     * Rev 03/10/2016
     */
    private void actCancelSaveOld() {

        // Acciones
        final int selRow = tblMaster.getSelectedRow();

        if (selRow >= 0) {
            final String codigo = (String) tblMaster.getValueAt(selRow, COL_COD);
            final String partida = (String) tblMaster.getValueAt(selRow, COL_PARTIDA);

            cbxPartida.setSelectedItem(codigo + "\t " + partida);
            txtValorPorc.setText(Format.toStr((Double) tblMaster.getValueAt(selRow, COL_PORC)));

            txtValorPorc.setValue(BigDecimal.valueOf((Double) tblMaster.getValueAt(selRow, COL_PORC)));
        } else {
            actClearComp();
        }
    }

    /**
     * Rev 03/10/2016
     */
    private void actReturn() {
        setVisible(false);
        dispose();
    }

    /**
     * Rev 03/10/2016
     */
    private void actClearComp() {
        cbxPartida.setSelectedIndex(-1);
        txtValorPorc.setValue(BigDecimal.ZERO);
    }

    /**
     * Rev 04/10/2016
     */
    private void actUpdateTbl() {

        cargarComboPartida();

        tblMaster.clearSelection();
        final DefaultTableModel model = (DefaultTableModel) tblMaster.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        final Object[] datos = new Object[5];
        try {
            final ResultSet rs = ConnCapip.getInstance().executeQuery("SELECT * FROM iva_aplicado ORDER BY id_iva_aplicado  ");
            while (rs.next()) {
                final IvaAplicModel regIva = new IvaAplicModel(rs);
                final PptoModel regPpto = PptoModel.getReg_x_Id("presupe", regIva.getId_part_ppto());

                if (regPpto != null) {
                    datos[COL_COD] = regPpto.getCodigo();
                    datos[COL_PARTIDA] = regPpto.getPartida();
                    datos[COL_PORC] = Format.toDouble(regIva.getValor_porc());
                    datos[COL_REG] = regIva;
                    datos[COL_REG_PPTO] = regPpto;
                    model.addRow(datos);
                }
            }
        } catch (final Exception inex) {
            JOptionPane.showMessageDialog(null, inex);
        }
    }

    /**
     * Valida cada campo, y actualiza cada parametro. Retorna verdadero solo si todos los campos son validos
     *
     * Rev 03/10/2016
     *
     */
    private boolean actValidSaveOld(final Map<String, Object> inparam) {

        final int rowSel = tblMaster.getSelectedRow();
        if (rowSel < 0) {
            return false;
        }
        inparam.put("id_iva_aplicado", ((IvaAplicModel) tblMaster.getValueAt(rowSel, COL_REG)).getId_iva_aplicado());

        return actValidSaveNew(inparam);
    }

    /**
     * Valida cada campo, y actualiza cada parametro. Retorna verdadero solo si todos los campos son validos
     *
     * Rev 03/10/2016
     *
     */
    private boolean actValidSaveNew(final Map<String, Object> inparam) {

        // Tomar el elemento de la partida presupuestaria seleccionado
        String sAux = (String) cbxPartida.getSelectedItem();

        // Verificar que el elemento exista
        if (sAux == null) {
            JOptionPane.showMessageDialog(this, "Partida presupuestaria invÃ¡lida");
            java.awt.EventQueue.invokeLater(cbxPartida::requestFocusInWindow);
            return false;
        }

        BigDecimal valorPorc;
        try {
            txtValorPorc.commitEdit();
            valorPorc = ((BigDecimal) txtValorPorc.getValue());
        } catch (final Exception inex) {
            JOptionPane.showMessageDialog(this, "Valor porcentual invÃ¡lido");
            java.awt.EventQueue.invokeLater(txtValorPorc::requestFocusInWindow);
            return false;
        }

        final double dValorPorc = valorPorc.doubleValue();
        if ((dValorPorc < 0.00d) || (dValorPorc > 100.00d)) {
            JOptionPane.showMessageDialog(this, "Valor porcentual invÃ¡lido");
            java.awt.EventQueue.invokeLater(txtValorPorc::requestFocusInWindow);
            return false;
        }

        final PptoModel reg;
        try {
            reg = PptoModel.getReg_x_Cod("presupe", sAux.split("\t")[0]);
        } catch (final Exception ex) {
            JOptionPane.showMessageDialog(this, "Partida presupuestaria invÃ¡lida");
            java.awt.EventQueue.invokeLater(cbxPartida::requestFocusInWindow);
            return false;
        }

        if (reg == null) {
            JOptionPane.showMessageDialog(this, "Partida presupuestaria invÃ¡lida");
            java.awt.EventQueue.invokeLater(cbxPartida::requestFocusInWindow);
            return false;
        }

        inparam.put("id_part_ppto", reg.getId());
        inparam.put("valor_porc", valorPorc);
        return true;
    }

    /**
     * Rev 10/2017
     *
     */
    private boolean actSaveNew(final Map<String, Object> inparam) {

        if (!inparam.containsKey("id_part_ppto") || !inparam.containsKey("valor_porc")) {
            return false;
        }

        final int codigo = (Integer) inparam.get("id_part_ppto");
        final BigDecimal valor_porc = (BigDecimal) inparam.get("valor_porc");

        try {
            final PreparedStatement pst = ConnCapip.getInstance().getConnection().prepareStatement("INSERT INTO iva_aplicado"
                    + "(id_part_ppto, valor_porc) "
                    + "VALUES (?, ?)");
            pst.setLong(1, codigo);
            pst.setBigDecimal(2, valor_porc);
            if (pst.executeUpdate() != 1) {
                throw new Exception("Error. Al guardar el Registro");
            }
        } catch (final Exception inex) {
            JOptionPane.showMessageDialog(null, inex);
            return false;
        }

        return true;
    }

    /**
     * Rev 03/10/2016
     */
    private boolean actSaveOld(final Map<String, Object> inparam) {

        if (!inparam.containsKey("id_iva_aplicado") || !inparam.containsKey("id_part_ppto") || !inparam.containsKey("valor_porc")) {
            return false;
        }

        final long id_iva_aplicado = (Long) inparam.get("id_iva_aplicado");
        final int id_part_ppto = (Integer) inparam.get("id_part_ppto");
        final BigDecimal valor_porc = (BigDecimal) inparam.get("valor_porc");

        try {
            final PreparedStatement pst = ConnCapip.getInstance().getConnection().prepareStatement("UPDATE iva_aplicado "
                    + "set id_part_ppto= ?, valor_porc= ? "
                    + "WHERE id_iva_aplicado= ?");
            pst.setLong(1, id_part_ppto);
            pst.setBigDecimal(2, valor_porc);
            pst.setLong(3, id_iva_aplicado);
            if (pst.executeUpdate() != 1) {
                throw new Exception("Error. Al actualizar el Registro");
            }

            IvaAplicModel regIva = IvaAplicModel.getxID(id_iva_aplicado);
            PptoModel regPpto = PptoModel.getReg_x_Id("presupe", regIva.getId_part_ppto());

            if ((regIva == null) || (regPpto == null)) {
                throw new Exception("Error. Al actualizar el Registro");
            }

            final int selRow = tblMaster.getSelectedRow();
            tblMaster.setValueAt(regPpto.getCodigo(), selRow, COL_COD);
            tblMaster.setValueAt(regPpto.getPartida(), selRow, COL_PARTIDA);
            tblMaster.setValueAt(Format.toDouble((BigDecimal) regIva.getValor_porc()), selRow, COL_PORC);
            tblMaster.setValueAt(regIva, selRow, COL_REG);

        } catch (final Exception inex) {
            JOptionPane.showMessageDialog(null, inex);
            return false;
        }
        return true;
    }

    /**
     *
     */
    private void cargarComboPartida() {
        DefaultComboBoxModel<String> modeloCombo = new DefaultComboBoxModel<>();
        try {
            final ResultSet rs = ConnCapip.getInstance().executeQuery("SELECT * FROM presupe ORDER BY codigo ASC");
            while (rs.next()) {
                modeloCombo.addElement(rs.getString("codigo") + "\t " + rs.getString("partida"));
            }

        } catch (final Exception inex) {
            JOptionPane.showMessageDialog(null, inex);
        }

        cbxPartida.setModel(modeloCombo);
        cbxPartida.setSelectedIndex(-1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                DlgIvaPorcAplic dialog = new DlgIvaPorcAplic(new javax.swing.JFrame());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbxPartida;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlComandos;
    private javax.swing.JPanel pnlComponentes;
    private javax.swing.JPanel pnlImagenFondo;
    private javax.swing.JTable tblMaster;
    private javax.swing.JFormattedTextField txtValorPorc;
    // End of variables declaration//GEN-END:variables

}
