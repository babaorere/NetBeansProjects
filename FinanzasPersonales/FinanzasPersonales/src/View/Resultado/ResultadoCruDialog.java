/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View.Resultado;

import Controller.Resultado.ResultadoCruController;
import Model.Resultado;
import java.util.Optional;

/**
 *
 * @author manager
 */
public final class ResultadoCruDialog extends javax.swing.JDialog {

    private Optional<Resultado> registroOpt;
    private boolean editar;

    /**
     * Creates new form UserCreateUpdateDialog
     *
     * @param inWin
     * @param InRegistroOpt
     * @param inEditar
     */
    public ResultadoCruDialog(final java.awt.Window inWin, Optional<Resultado> InRegistroOpt, boolean inEditar) {
        super(inWin, DEFAULT_MODALITY_TYPE);

        // Aqui se procede a crear los componentes graficos, varios de la GUI
        initComponents();

        registroOpt = InRegistroOpt;
        editar = inEditar;

        // Aqui se procede a crear los componentes propios de la clase, los funcionales de la aplicación
        myInitComponents();
    }

    public void myInitComponents() {

        // Esto se utiliza mas adelante, para pasar esta Win como parametro en el "windowClosing"
        final java.awt.Window me = this;

        // Creación del listener, qie sera ejecutado una vez que se quiera cerrar la ventana
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {

                java.awt.EventQueue.invokeLater(() -> {
                    ResultadoCruController.actionSalir(me);
                });
            }
        });

        // Añadimos un default button
        getRootPane().setDefaultButton(btnCrear);

        // si existe un usuario a modificar
        if (registroOpt.isPresent()) {
            Resultado registro = registroOpt.get();

            txtId.setText(String.valueOf(registro.getId()));
            txtIngresos.setText(String.valueOf(registro.getIngresos()));
            txtGastos.setText(String.valueOf(registro.getGastos()));
            txtUtilidad.setText(String.valueOf(registro.getUtilidad()));

            if (editar) {
                btnCrear.setEnabled(false);
                btnModificar.setEnabled(true);

                txtUtilidad.setEnabled(false);
            } else {
                txtId.setEnabled(false);
                txtIngresos.setEnabled(false);
                txtGastos.setEnabled(false);

                txtUtilidad.setEnabled(false);

                btnCrear.setEnabled(false);
                btnModificar.setEnabled(false);
            }

        } else {
            // Resultado nuevo
            txtId.setText("");
            txtIngresos.setText("");
            txtGastos.setText("");
            txtUtilidad.setText("");

            txtUtilidad.setEnabled(false);

            btnCrear.setEnabled(true);
            btnModificar.setEnabled(false);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtIngresos = new javax.swing.JTextField();
        txtUtilidad = new javax.swing.JTextField();
        txtGastos = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btnCrear = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        btnModificar = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        btnCancelar = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear - Consultar - Modificar");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        jPanel3.setMinimumSize(new java.awt.Dimension(216, 40));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 40));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Resultado");
        jPanel3.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel2.setMaximumSize(new java.awt.Dimension(75, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(75, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(75, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Ingresos");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setMaximumSize(new java.awt.Dimension(75, 25));
        jLabel3.setMinimumSize(new java.awt.Dimension(75, 25));
        jLabel3.setPreferredSize(new java.awt.Dimension(75, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Gastos");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel4.setMaximumSize(new java.awt.Dimension(75, 25));
        jLabel4.setMinimumSize(new java.awt.Dimension(75, 25));
        jLabel4.setPreferredSize(new java.awt.Dimension(75, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Utilidad");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel5.setMaximumSize(new java.awt.Dimension(75, 25));
        jLabel5.setMinimumSize(new java.awt.Dimension(75, 25));
        jLabel5.setPreferredSize(new java.awt.Dimension(75, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        txtId.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtId, gridBagConstraints);

        txtIngresos.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtIngresos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIngresos.setPreferredSize(new java.awt.Dimension(200, 25));
        txtIngresos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIngresosKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtIngresos, gridBagConstraints);

        txtUtilidad.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtUtilidad.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtUtilidad.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtUtilidad, gridBagConstraints);

        txtGastos.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtGastos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGastos.setMaximumSize(new java.awt.Dimension(200, 25));
        txtGastos.setMinimumSize(new java.awt.Dimension(200, 25));
        txtGastos.setPreferredSize(new java.awt.Dimension(200, 25));
        txtGastos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtGastosKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtGastos, gridBagConstraints);

        getContentPane().add(jPanel2);

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(filler3);

        btnCrear.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrear);
        jPanel1.add(filler1);

        btnModificar.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar);
        jPanel1.add(filler2);

        btnCancelar.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);
        jPanel1.add(filler4);

        getContentPane().add(jPanel1);

        setSize(new java.awt.Dimension(410, 430));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

//        // retornar si hay un usuario, esto a manera de debug
//        if (registroOpt.isPresent()) {
//            return;
//        }
//
//        // Validar entradas
//        Integer id = 0;
//
//        String strIngresos = txtIngresos.getText().trim().toUpperCase();
//
//        Integer ingresos;
//
//        try {
//            ingresos = Integer.valueOf(strIngresos);
//        } catch (NumberFormatException numberFormatException) {
//            JOptionPane.showMessageDialog(this, "Ingreso invalido");
//            return; // Salir
//        }
//
//        String strGastos = txtGastos.getText().trim().toUpperCase();
//
//        Integer gastos;
//
//        try {
//            gastos = Integer.valueOf(strGastos);
//        } catch (NumberFormatException numberFormatException) {
//            JOptionPane.showMessageDialog(this, "Gasto invalido");
//            return; // Salir
//        }
//
//        Integer utilidad = ingresos - gastos;
//        txtUtilidad.setText(String.valueOf(utilidad));
//
//        // Creamos el usuario con la data recolectada
//        Resultado item = new Resultado(id, ingresos, gastos, utilidad);
//
//        // Guardar
//        try {
//            Optional<Integer> pkOpt = ResultadoCruController.Crear(item);
//            if (pkOpt.isPresent()) {
//                JOptionPane.showMessageDialog(this, "Creado");
//
//                registroOpt = Optional.of(item);
//
//                // Procedemos a cerrar la ventana de login y activamos la ventana principal
//                actionSalir(this);
//
//                if (this.getOwner() == null) {
//                    java.awt.EventQueue.invokeLater(() -> {
//                        new MenuFrame().setVisible(true);
//                    });
//                }
//            } else {
//                JOptionPane.showMessageDialog(this, "NO Creado");
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Error al tratar de Crear\n" + ex.toString());
//        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

//        // retornar si NO hay un usuario, esto a manera de debug
//        if (!registroOpt.isPresent()) {
//            return;
//        }
//
//        // Validar entradas
//        Integer id = registroOpt.get().getId();
//
//        String strIngresos = txtIngresos.getText().trim().toUpperCase();
//
//        Integer ingresos;
//
//        try {
//            ingresos = Integer.valueOf(strIngresos);
//        } catch (NumberFormatException numberFormatException) {
//            JOptionPane.showMessageDialog(this, "Ingreso invalido");
//            return; // Salir
//        }
//
//        String strGastos = txtGastos.getText().trim().toUpperCase();
//
//        Integer gastos;
//
//        try {
//            gastos = Integer.valueOf(strGastos);
//        } catch (NumberFormatException numberFormatException) {
//            JOptionPane.showMessageDialog(this, "Gasto invalido");
//            return; // Salir
//        }
//
//        Integer utilidad = ingresos - gastos;
//        txtUtilidad.setText(String.valueOf(utilidad));
//
//        // Creamos el usuario con la data recolectada
//        Resultado item = new Resultado(id, ingresos, gastos, utilidad);
//
//        // Guardar
//        try {
//            Optional<Integer> pkOpt = ResultadoCruController.Modificar(item);
//            if (pkOpt.isPresent()) {
//                JOptionPane.showMessageDialog(this, "Modificado");
//
//                registroOpt = Optional.of(item);
//
//                // Procedemos a cerrar la ventana de login y activamos la ventana principal
//                actionSalir(this);
//
//                if (this.getOwner() == null) {
//                    java.awt.EventQueue.invokeLater(() -> {
//                        new MenuFrame().setVisible(true);
//                    });
//                }
//            } else {
//                JOptionPane.showMessageDialog(this, "Fallo en la operación");
//            }
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Error al tratar de Modificar\n" + ex.toString());
//        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        ResultadoCruController.actionSalir(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtIngresosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIngresosKeyTyped

        int ingresos;

        try {
            ingresos = Integer.parseInt(txtIngresos.getText());
        } catch (Exception exception) {
            ingresos = 0;
        }

        int gastos;

        try {
            gastos = Integer.parseInt(txtGastos.getText());
        } catch (Exception exception) {
            gastos = 0;
        }

        int utilidad = ingresos - gastos;

        txtUtilidad.setText(String.valueOf(utilidad));

    }//GEN-LAST:event_txtIngresosKeyTyped

    private void txtGastosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGastosKeyTyped
        int ingresos;

        try {
            ingresos = Integer.parseInt(txtIngresos.getText());
        } catch (Exception exception) {
            ingresos = 0;
        }

        int gastos;

        try {
            gastos = Integer.parseInt(txtGastos.getText());
        } catch (Exception exception) {
            gastos = 0;
        }

        int utilidad = ingresos - gastos;

        txtUtilidad.setText(String.valueOf(utilidad));
    }//GEN-LAST:event_txtGastosKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultadoCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultadoCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultadoCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultadoCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                ResultadoCruDialog dialog = new ResultadoCruDialog(new javax.swing.JFrame(), Optional.empty(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnModificar;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtGastos;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIngresos;
    private javax.swing.JTextField txtUtilidad;
    // End of variables declaration//GEN-END:variables
}
