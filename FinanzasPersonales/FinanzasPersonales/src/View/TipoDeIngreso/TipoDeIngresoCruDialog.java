package View.TipoDeIngreso;

import static Controller.LoginController.actionSalir;
import Controller.TipoDeIngreso.TipoDeIngresoCruController;
import Model.TipoDeIngreso;
import Model.Usuario;
import Model.UsuarioDao;
import View.MenuFrame;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import javax.swing.JOptionPane;

/**
 *
 * @author manager
 */
public final class TipoDeIngresoCruDialog extends javax.swing.JDialog {

    private Optional<TipoDeIngreso> registroOpt;
    private final boolean editar;

    private List<Usuario> listU;

    /**
     * Creates new form UserCreateUpdateDialog
     *
     * @param inWin
     * @param InRegistro
     * @param inEditar
     */
    public TipoDeIngresoCruDialog(final java.awt.Window inWin, Optional<TipoDeIngreso> InRegistro, boolean inEditar) {
        super(inWin, DEFAULT_MODALITY_TYPE);

        // Aqui se procede a crear los componentes graficos, varios de la GUI
        initComponents();

        registroOpt = InRegistro;
        editar = inEditar;

        // Aqui se procede a crear los componentes propios de la clase, los funcionales de la aplicación
        myInitComponents();
    }

    public void myInitComponents() {

        // Esto se utiliza mas adelante, para pasar esta Win como parametro en el "windowClosing"
        final java.awt.Window me = this;

        // Creación del listener, qie sera ejecutado una vez que se quiera cerrar la ventana
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {

                java.awt.EventQueue.invokeLater(() -> {
                    TipoDeIngresoCruController.actionSalir(me);
                });
            }
        });

        try {
            listU = (new UsuarioDao()).findAll();
        } catch (Exception ex) {
            listU = new ArrayList<>();
        }

        for (Usuario usuario : listU) {
            cmbUsuario.addItem(usuario.getNickname());
        }

        // Añadimos un default button
        getRootPane().setDefaultButton(btnCrear);

        // si existe un usuario a modificar
        if (registroOpt.isPresent()) {
            TipoDeIngreso registro = registroOpt.get();

            txtId.setText(String.valueOf(registro.getId()));
            cmbUsuario.setSelectedItem(registro.getUsuario().getNickname());
            txtTipo.setText(registro.getTipoDeIngreso());
            txtValor.setText(String.valueOf(registro.getValorIngreso()));
            txtFecha.setText(registro.getFechaIngreso().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));

            if (editar) {
                btnCrear.setEnabled(false);
                btnModificar.setEnabled(true);

            } else {
                txtId.setEnabled(false);
                cmbUsuario.setEnabled(false);
                txtTipo.setEnabled(false);
                txtValor.setEnabled(false);
                txtFecha.setEnabled(false);

                btnCrear.setEnabled(false);
                btnModificar.setEnabled(false);
            }

        } else {
            // TipoDeIngreso nuevo
            txtId.setText("");
            cmbUsuario.setSelectedIndex(-1);
            txtTipo.setText("");
            txtValor.setText("");
            txtFecha.setText("");

            btnCrear.setEnabled(true);
            btnModificar.setEnabled(false);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        txtValor = new javax.swing.JTextField();
        cmbUsuario = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btnCrear = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        btnModificar = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        btnCancelar = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear - Consultar - Modificar");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        jPanel3.setMinimumSize(new java.awt.Dimension(216, 40));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 40));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tipo de Ingreso");
        jPanel3.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel2.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Usuario");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Fecha dd-MM-aaaa");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel4.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Tipo");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel6.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Valor");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel8.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        txtId.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtId, gridBagConstraints);

        txtFecha.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtFecha.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtFecha, gridBagConstraints);

        txtTipo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtTipo.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtTipo, gridBagConstraints);

        txtValor.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtValor.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtValor, gridBagConstraints);

        cmbUsuario.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        cmbUsuario.setMaximumSize(new java.awt.Dimension(150, 25));
        cmbUsuario.setMinimumSize(new java.awt.Dimension(150, 25));
        cmbUsuario.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(cmbUsuario, gridBagConstraints);

        getContentPane().add(jPanel2);

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(filler3);

        btnCrear.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrear);
        jPanel1.add(filler1);

        btnModificar.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar);
        jPanel1.add(filler2);

        btnCancelar.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);
        jPanel1.add(filler4);

        getContentPane().add(jPanel1);

        setSize(new java.awt.Dimension(410, 430));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

        // retornar si hay un usuario, esto a manera de debug
        if (registroOpt.isPresent()) {
            return;
        }

        // Validar entradas
        Integer id = 0;

        int idxU = cmbUsuario.getSelectedIndex();
        if (idxU < 0) {
            JOptionPane.showMessageDialog(this, "Usuario invalido");
            return; // Salir
        }

        Usuario usuario = listU.get(idxU);

        String tipo = txtTipo.getText().trim().toUpperCase();

        if (tipo.length() < 4) {
            JOptionPane.showMessageDialog(this, "Tipo invalido");
            return; // Salir
        }

        String strValor = txtValor.getText().trim().toUpperCase();

        Integer valor;

        try {
            valor = Integer.parseInt(strValor);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "Valor invalido");
            return; // Salir
        }

        String strFecha = txtFecha.getText().trim();

        LocalDate date;
        try {
            date = LocalDate.parse(strFecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fecha invalida");
            return; // Salir
        }
        LocalDateTime fecha = LocalDateTime.of(date, LocalTime.MIDNIGHT);

        // Creamos el usuario con la data recolectada
        TipoDeIngreso registro = new TipoDeIngreso(id, usuario, tipo, valor, fecha);

        // Guardar
        try {
            Optional<Integer> pkOpt = TipoDeIngresoCruController.Crear(registro);
            if (pkOpt.isPresent()) {
                JOptionPane.showMessageDialog(this, "Creado");

                registroOpt = Optional.of(registro);

                // Procedemos a cerrar la ventana de login y activamos la ventana principal
                actionSalir(this);

                if (this.getOwner() == null) {
                    java.awt.EventQueue.invokeLater(() -> {
                        new MenuFrame().setVisible(true);
                    });
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al tratar de Crear\n" + ex.toString());
        }

    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        // retornar si NO hay un usuario, esto a manera de debug
        if (!registroOpt.isPresent()) {
            return;
        }

        // Validar entradas
        Integer id = registroOpt.get().getId();

        int idxU = cmbUsuario.getSelectedIndex();
        if (idxU < 0) {
            JOptionPane.showMessageDialog(this, "Usuario invalido");
            return; // Salir
        }

        Usuario usuario = listU.get(idxU);

        String tipo = txtTipo.getText().trim().toUpperCase();

        if (tipo.length() < 4) {
            JOptionPane.showMessageDialog(this, "Tipo invalido");
            return; // Salir
        }

        String strValor = txtValor.getText().trim().toUpperCase();

        Integer valor;

        try {
            valor = Integer.parseInt(strValor);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(this, "Valor invalido");
            return; // Salir
        }

        String strFecha = txtFecha.getText().trim();

        LocalDate date;
        try {
            date = LocalDate.parse(strFecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fecha invalida");
            return; // Salir
        }
        LocalDateTime fecha = LocalDateTime.of(date, LocalTime.MIDNIGHT);

        // Creamos el usuario con la data recolectada
        TipoDeIngreso registro = new TipoDeIngreso(id, usuario, tipo, valor, fecha);

        // Guardar
        try {
            Optional<Integer> pkOpt = TipoDeIngresoCruController.Modificar(registro);
            if (pkOpt.isPresent()) {
                JOptionPane.showMessageDialog(this, "Modificado");

                registroOpt = Optional.of(registro);

                // Procedemos a cerrar la ventana de login y activamos la ventana principal
                actionSalir(this);

                if (this.getOwner() == null) {
                    java.awt.EventQueue.invokeLater(() -> {
                        new MenuFrame().setVisible(true);
                    });
                }
            } else {
                JOptionPane.showMessageDialog(this, "Fallo en la operación");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al tratar de Crear\n" + ex.toString());
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        TipoDeIngresoCruController.actionSalir(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cmbUsuario;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
