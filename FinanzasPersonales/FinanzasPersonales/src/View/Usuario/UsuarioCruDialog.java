/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package View.Usuario;

import Controller.LoginController;
import static Controller.LoginController.actionSalir;
import Controller.MenuController;
import Controller.UsuarioCruController;
import Model.Usuario;
import View.MenuFrame;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.security.MessageDigest;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.Optional;
import javax.swing.JOptionPane;

/**
 *
 * @author manager
 */
public final class UsuarioCruDialog extends javax.swing.JDialog {

    private Optional<Usuario> usuarioOpt;
    private boolean editar;

    /**
     * Creates new form UserCreateUpdateDialog
     *
     * @param inWin
     * @param InUsuarioOpt
     * @param inEditar
     */
    public UsuarioCruDialog(final java.awt.Window inWin, Optional<Usuario> InUsuarioOpt, boolean inEditar) {
        super(inWin, DEFAULT_MODALITY_TYPE);

        // Aqui se procede a crear los componentes graficos, varios de la GUI
        initComponents();

        usuarioOpt = InUsuarioOpt;
        editar = inEditar;

        // Aqui se procede a crear los componentes propios de la clase, los funcionales de la aplicación
        myInitComponents();
    }

    public void myInitComponents() {

        // Esto se utiliza mas adelante, para pasar esta Win como parametro en el "windowClosing"
        final java.awt.Window me = this;

        // Creación del listener, qie sera ejecutado una vez que se quiera cerrar la ventana
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {

                java.awt.EventQueue.invokeLater(() -> {
                    UsuarioCruController.actionSalir(me);
                });
            }
        });

        // Añadimos un default button
        getRootPane().setDefaultButton(btnCrear);

        // si existe un usuario a modificar
        if (usuarioOpt.isPresent()) {
            Usuario usuario = usuarioOpt.get();

            txtId.setText(String.valueOf(usuario.getId()));
            txtNombre.setText(usuario.getNombreCompleto());
            txtFecha.setText(usuario.getFecha().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));
            txtDir.setText(usuario.getDireccion());
            txtCorreo.setText(usuario.getCorreo());
            txtTel.setText(usuario.getTelefono());
            txtNick.setText(usuario.getNickname());
            txtPass.setText(String.valueOf(usuario.getPassword()));

            if (editar) {
                btnCrear.setEnabled(false);
                btnModificar.setEnabled(true);
                txtPass.setEnabled(false);

            } else {
                txtId.setEnabled(false);
                txtNombre.setEnabled(false);
                txtFecha.setEnabled(false);
                txtDir.setEnabled(false);
                txtCorreo.setEnabled(false);
                txtTel.setEnabled(false);
                txtNick.setEnabled(false);
                txtPass.setEnabled(false);

                btnCrear.setEnabled(false);
                btnModificar.setEnabled(false);
            }

        } else {
            // Usuario nuevo
            txtId.setText("");
            txtNombre.setText("");
            txtFecha.setText("");
            txtDir.setText("");
            txtCorreo.setText("");
            txtTel.setText("");
            txtNick.setText("");
            txtPass.setText("");

            btnCrear.setEnabled(true);
            btnModificar.setEnabled(false);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtDir = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtTel = new javax.swing.JTextField();
        txtNick = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        btnCrear = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        btnModificar = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 0), new java.awt.Dimension(15, 32767));
        btnCancelar = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear - Consultar - Modificar Usuario");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.PAGE_AXIS));

        jPanel3.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        jPanel3.setMinimumSize(new java.awt.Dimension(216, 40));
        jPanel3.setPreferredSize(new java.awt.Dimension(400, 40));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Crear - Consultar - Modificar Usuario");
        jPanel3.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel3);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ID");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel2.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre Completo");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Fecha dd-MM-aaaa");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel4.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Dirección");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel5.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Correo");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel6.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Teléfono");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel7.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Nickname");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel8.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Password");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel9.setPreferredSize(new java.awt.Dimension(135, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel9, gridBagConstraints);

        txtId.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.setPreferredSize(new java.awt.Dimension(50, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtId, gridBagConstraints);

        txtNombre.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtNombre.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtNombre, gridBagConstraints);

        txtDir.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtDir.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtDir, gridBagConstraints);

        txtFecha.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtFecha.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtFecha, gridBagConstraints);

        txtCorreo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtCorreo.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtCorreo, gridBagConstraints);

        txtTel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtTel.setPreferredSize(new java.awt.Dimension(100, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtTel, gridBagConstraints);

        txtNick.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtNick.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtNick, gridBagConstraints);

        txtPass.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtPass.setPreferredSize(new java.awt.Dimension(150, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        jPanel2.add(txtPass, gridBagConstraints);

        getContentPane().add(jPanel2);

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 30));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(filler3);

        btnCrear.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrear);
        jPanel1.add(filler1);

        btnModificar.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar);
        jPanel1.add(filler2);

        btnCancelar.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar);
        jPanel1.add(filler4);

        getContentPane().add(jPanel1);

        setSize(new java.awt.Dimension(410, 430));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed

        // retornar si hay un usuario, esto a manera de debug
        if (usuarioOpt.isPresent()) {
            return;
        }

        // Validar entradas
        Integer id = 0;

        String nombreCompleto = txtNombre.getText().trim().toUpperCase();

        if (nombreCompleto.length() < 4) {
            JOptionPane.showMessageDialog(this, "Nombre invalido");
            return; // Salir
        }

        String strFecha = txtFecha.getText().trim();

        LocalDate date;
        try {
            date = LocalDate.parse(strFecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fecha invalida");
            return; // Salir
        }
        LocalDateTime fecha = LocalDateTime.of(date, LocalTime.MIDNIGHT);

        String dir = txtDir.getText().trim().toUpperCase();

        if (dir.length() < 4) {
            JOptionPane.showMessageDialog(this, "Dirección invalida");
            return; // Salir
        }

        String correo = txtCorreo.getText().trim().toUpperCase();

        if (correo.length() < 10) {
            JOptionPane.showMessageDialog(this, "Correo invalido");
            return; // Salir
        }

        String tel = txtTel.getText().trim().toUpperCase();

        if (tel.length() < 10) {
            JOptionPane.showMessageDialog(this, "Teléfono invalido");
            return; // Salir
        }

        String nick = txtNick.getText().trim().toUpperCase();

        if (nick.length() < 4) {
            JOptionPane.showMessageDialog(this, "Nickname invalido");
            return; // Salir
        }

        char passAux[] = txtPass.getPassword();

        if (passAux.length < 4) {
            JOptionPane.showMessageDialog(this, "Password invalido");
            return; // Salir
        }

        final byte[] pass;
        try {
            pass = MessageDigest.getInstance("MD5").digest(charToByte(txtPass.getPassword()));
        } catch (final Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al encriptar el password\n" + ex.toString());
            return; // salir
        }

        // Creamos el usuario con la data recolectada
        Usuario usuario = new Usuario(id, nombreCompleto, fecha, dir, correo, tel, nick, pass);

        // Guardar
        try {
            Optional<Integer> pkOpt = UsuarioCruController.CrearUsuario(usuario);
            if (pkOpt.isPresent()) {
                JOptionPane.showMessageDialog(this, "Usuario creado");

                usuarioOpt = Optional.of(usuario);

                // Procedemos a cerrar la ventana de login y activamos la ventana principal
                actionSalir(this);

                if (this.getOwner() == null) {
                    java.awt.EventQueue.invokeLater(() -> {
                        new MenuFrame().setVisible(true);
                    });
                }

                LoginController.setLoginUsuario(usuario);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al tratar de crear el usuario\n" + ex.toString());
        }

    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        // retornar si NO hay un usuario, esto a manera de debug
        if (!usuarioOpt.isPresent()) {
            return;
        }

        // Validar entradas
        Integer id = usuarioOpt.get().getId();

        String nombreCompleto = txtNombre.getText().trim().toUpperCase();

        if (nombreCompleto.length() < 4) {
            JOptionPane.showMessageDialog(this, "Nombre invalido");
            return; // Salir
        }

        String strFecha = txtFecha.getText().trim();

        LocalDate date;
        try {
            date = LocalDate.parse(strFecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fecha invalida");
            return; // Salir
        }
        LocalDateTime fecha = LocalDateTime.of(date, LocalTime.MIDNIGHT);

        String dir = txtDir.getText().trim().toUpperCase();

        if (dir.length() < 4) {
            JOptionPane.showMessageDialog(this, "Dirección invalida");
            return; // Salir
        }

        String correo = txtCorreo.getText().trim().toUpperCase();

        if (correo.length() < 10) {
            JOptionPane.showMessageDialog(this, "Correo invalido");
            return; // Salir
        }

        String tel = txtTel.getText().trim().toUpperCase();

        if (tel.length() < 10) {
            JOptionPane.showMessageDialog(this, "Teléfono invalido");
            return; // Salir
        }

        String nick = txtNick.getText().trim().toUpperCase();

        if (nick.length() < 4) {
            JOptionPane.showMessageDialog(this, "Nickname invalido");
            return; // Salir
        }

        char passAux[] = txtPass.getPassword();

        if (passAux.length < 4) {
            JOptionPane.showMessageDialog(this, "Password invalido");
            return; // Salir
        }

        final byte[] pass;
        try {
            pass = MessageDigest.getInstance("MD5").digest(charToByte(txtPass.getPassword()));
        } catch (final Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al encriptar el password\n" + ex.toString());
            return; // salir
        }

        // Creamos el usuario con la data recolectada
        // el id y passwork no son modificados
        Usuario usuario = new Usuario(id, nombreCompleto, fecha, dir, correo, tel, nick, pass);

        // Guardar
        try {
            Optional<Integer> pkOpt = UsuarioCruController.ModificarUsuario(usuario);
            if (pkOpt.isPresent()) {
                JOptionPane.showMessageDialog(this, "Modificado");

                usuarioOpt = Optional.of(usuario);

                // Procedemos a cerrar la ventana de login y activamos la ventana principal
                actionSalir(this);

                if (this.getOwner() == null) {
                    java.awt.EventQueue.invokeLater(() -> {
                        new MenuFrame().setVisible(true);
                    });
                }
            } else {
                JOptionPane.showMessageDialog(this, "Fallo en la operación");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al tratar de crear el usuario\n" + ex.toString());
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        MenuController.actionSalir(this);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private static byte[] charToByte(char[] chars) {
        CharBuffer charBuffer = CharBuffer.wrap(chars);
        java.nio.ByteBuffer byteBuffer = Charset.forName("UTF-8").encode(charBuffer);
        byte[] bytes = Arrays.copyOfRange(byteBuffer.array(),
            byteBuffer.position(), byteBuffer.limit());
        Arrays.fill(charBuffer.array(), '\u0000'); // clear sensitive data
        Arrays.fill(byteBuffer.array(), (byte) 0); // clear sensitive data
        return bytes;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioCruDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                UsuarioCruDialog dialog = new UsuarioCruDialog(new javax.swing.JFrame(), Optional.empty(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnModificar;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNick;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
