package com.webapp.grafosangre;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 */
public class PanelCanvas extends javax.swing.JPanel {

    private int matAdy[][];

    /**
     * Creates new form PanelGrafica
     */
    public PanelCanvas() {
        initComponents();
    }

    @Override
    public void paint(Graphics inG) {
        // Llamada al "paint" original del padre
        super.paint(inG);

        // Verificar que la matriz halla sido establecida
        if (matAdy == null) {
            return;
        }

        Graphics2D g = (Graphics2D) inG;

        g.setBackground(Color.BLACK);

        // Establecer el color del dibujo, y graficar las conexiones del nodo A, con el resto
        g.setColor(Color.RED);

        if (matAdy[0][0] > 0) {
            g.drawOval(160, 27, 50, 50); // conexión del nodo a si mismo
        }
        if (matAdy[0][1] > 0) {
            g.drawLine(212, 50, 312, 50);  // A->B
        }
        if (matAdy[0][2] > 0) {
            g.drawLine(213, 63, 213, 160); // A->AB
        }
        if (matAdy[0][3] > 0) {
            g.drawLine(200, 63, 300, 160); // A->O
        }

        // Establecer el color del dibujo, y graficar las conexiones del nodo B, con el resto
        g.setColor(Color.GREEN);
        if (matAdy[1][0] > 0) {
            g.drawLine(212, 62, 312, 62);  // B->A
        }
        if (matAdy[1][1] > 0) {
            g.drawOval(310, 27, 50, 50); // conexión del nodo a si mismo
        }
        if (matAdy[1][2] > 0) {
            g.drawLine(300, 63, 200, 160); // B->AB
        }
        if (matAdy[1][3] > 0) {
            g.drawLine(320, 63, 320, 160); // B->O
        }

        // Establecer el color del dibujo, y graficar las conexiones del nodo AB, con el resto
        g.setColor(Color.BLUE);
        if (matAdy[2][0] > 0) {
            g.drawLine(200, 63, 200, 160);  // AB->A
        }
        if (matAdy[2][1] > 0) {
            g.drawLine(213, 170, 312, 70);  // AB->B
        }
        if (matAdy[2][2] > 0) {
            g.drawOval(160, 150, 50, 50); // conexión del nodo a si mismo
        }
        if (matAdy[2][3] > 0) {
            g.drawLine(212, 160, 312, 160); // AB->O
        }

        // Establecer el color del dibujo, y graficar las conexiones del nodo O, con el resto
        g.setColor(Color.WHITE);
        if (matAdy[3][0] > 0) {
            g.drawLine(210, 53, 310, 152); // O->A
        }
        if (matAdy[3][1] > 0) {
            g.drawLine(310, 63, 310, 160); // O->B
        }
        if (matAdy[3][2] > 0) {
            g.drawLine(212, 170, 312, 170); // O->AB
        }
        if (matAdy[3][3] > 0) {
            g.drawOval(310, 150, 50, 50); // conexión del nodo a si mismo
        }

        // Establecer el color del dibujo, y graficar los nodos (circulos)
        g.setColor(Color.RED);
        g.fillOval(200, 50, 25, 25);
        g.setColor(Color.GREEN);
        g.fillOval(300, 50, 25, 25);
        g.setColor(Color.BLUE);
        g.fillOval(200, 150, 25, 25);
        g.setColor(Color.WHITE);
        g.fillOval(300, 150, 25, 25);

        // Establecer el color del dibujo, el tamaño de la fuente (letra), y graficar las etiquetas,
        // correspondientes al tipo de sangre
        g.setFont(g.getFont().deriveFont(20f));
        g.setColor(Color.RED);
        g.drawString("A", 170, 50);
        g.setColor(Color.GREEN);
        g.drawString("B", 340, 50);
        g.setColor(Color.BLUE);
        g.drawString("AB", 170, 190);
        g.setColor(Color.WHITE);
        g.drawString("O", 340, 190);

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(600, 200));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public void setMatAdy(int[][] inMatAdy) {
        this.matAdy = inMatAdy;
    }
}
